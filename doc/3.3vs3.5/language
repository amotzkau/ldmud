Listed herein are language incompatibilites between 3.3 and 3.5,
that you should pay attention to when updating.

- sefun prefix:
  The 3.5 driver allows to explicitly call simul-efuns using a 'sefun::'
  prefix, e.g. sefun::fun(). If a program has inherited another
  program with the name "sefun" and explicitly called inherited
  lfuns with that syntax, this won't work anymore, because the
  driver now tries to find a simul-efun with that name.
  This also applies to symbol_function and closure literals (#'sefun::fun).

- ptmalloc keywords for debug_info():
  DID_MEM_MMAP, DID_MEM_MMAP_SIZE, DID_MEM_FREE_CHUNKS, DID_MEM_FFREE,
  DID_MEM_FFREE_SIZE, DID_MEM_MAX_ALLOCATED and DID_MEM_KEEP_COST were
  removed.

- Removed efuns:
  + The deprecated efuns cat() and tail() were removed. They can be
    easily and more flexibly replaced by sefuns, which are supplied with
    the driver in /mudlib/deprecated/. (#637, #228)
  + The efun set_heart_beat() was removed in favor of
    configure_object(ob, OC_HEART_BEAT, flag). There is a sefun
    replacement in /mudlib/deprecated/. (#596)
  + The efuns enable_commands() and disable_commands() were removed in
    favor of configure_obect(ob, OC_COMMANDS_ENABLED, 1 resp. 0).
    There is a sefun replacement in /mudlib/deprecated/. (#596)
  + The efun query_once_interactive() was removed in favor of
    object_info(ob, OI_ONCE_INTERACTIVE). There is a sefun
    replacement in /mudlib/deprecated/. (#596)
  + The efun query_shadowing() was removed in favor of
    object_info(ob, OI_SHADOW_PREV). There is a sefun replacement
    in /mudlib/deprecated/. (#596)
  + The efuns set_connection_charset(), get_connection_charset(),
    set_combine_charset(), and get_combine_charset() were removed in
    favor of
     * configure_object(ob, IC_CONNECTION_CHARSET_AS_STRING, val),
       configure_object(ob, IC_CONNECTION_CHARSET_AS_ARRAY, val) and
       configure_object(ob, IC_QUOTE_IAC, 1 resp. 0),
     * object_info(ob, IC_CONNECTION_CHARSET_AS_STRING),
       object_info(ob, IC_CONNECTION_CHARSET_AS_STRING) and
       object_info(ob, IC_QUOTE_IAC),
     * configure_object(ob, IC_COMBINE_CHARSET_AS_STRING, val) and
       configure_object(ob, IC_COMBINE_CHARSET_AS_ARRAY, val),
     * object_info(ob, IC_COMBINE_CHARSET_AS_STRING) and
       object_info(ob, IC_COMBINE_CHARSET_AS_STRING),
    There are a sefun replacements in /mudlib/deprecated/. (#596)
  + The efun set_buffer_size() was removed in favor of
    configure_interactive(ob, IC_SOCKET_BUFFER_SIZE, size).
    There is a sefun replacement in /mudlib/deprecated/. (#596)
  + The efun enable_telnet() was removed in favor of
    configure_interactive(ob, IC_TELNET_ENABLED, state).
    There is a sefun replacement in /mudlib/deprecated/. (#596)
  + The efuns start_mccp_compress(), end_mccp_compress(),
    query_mccp(), and query_mccp_stats() were removed in favor of
     * configure_interactive(ob, IC_MCCP, state) and
     * interactive_info(ob, II_MCCP_STATS).
    There are a sefun replacements in /mudlib/deprecated/. (#596)
  + The efun set_prompt() was removed in favor of
    configure_interactive(ob, IC_PROMPT, prompt).
    There is a sefun replacement in /mudlib/deprecated/. (#596)
  + The efuns set_max_commands() and get_max_commands() were removed in
    favor of configure_interactive(ob, IC_MAX_COMMANDS, num).
    There are a sefun replacements in /mudlib/deprecated/. (#596)
  + The efun set_modify_command() was removed in favor of
    configure_interactive(ob, IC_MODIFY_COMMAND, ob).
    There is a sefun replacement in /mudlib/deprecated/. (#596)
  + The efuns query_ip_name() and query_ip_number() were removed in favor of
     * interactive_info(ob, II_IP_NAME),
     * interactive_info(ob, II_IP_NUMBER), and
     * interactive_info(ob, II_IP_ADDRESS).
    There are a sefun replacements in /mudlib/deprecated/. (#596)
  + The efun query_editing() was removed in favor of
    interactive_info(ob, II_EDITING). There is a sefun replacement
    in /mudlib/deprecated/. (#596)
  + The efun query_idle() was removed in favor of
    interactive_info(ob, II_IDLE). There is a sefun replacement
    in /mudlib/deprecated/. (#596)
  + The efun query_input_pending() was removed in favor of
    interactive_info(ob, II_INPUT_PENDING). There is a sefun replacement
    in /mudlib/deprecated/. (#596)
  + The efun debug_info() was removed in favor of driver_info()
    There is a sefun replacement in /mudlib/deprecated/. (#596)
  + The efuns query_limits() and set_limits() were removed in favor of
    driver_info() and configure_driver().
    There are a sefun replacements in /mudlib/deprecated/. (#596)

- New efuns:
  + json_parse() parses strings encoding a JSON object into an
    appropriate LPC value. (optional efun)
  + json_serialize() converts a LPC value into an JSON object and
    serializes it as LPC string. (optional efun)
  + configure_object() sets options for given objects. (#596)
  + interactive_info() and driver_info() return information about
    interactive objects resp. the driver and the LPC runtime. (#596)
  + dump_driver_info() dumps information to a file. (#596)
  + objects() returns an excerpt from the object list. (#596)

- Changed efuns:
  + call_other() and call_direct() now always accept an array of objects or
    strings (object names) as argument and call the function in all of these
    objects.
  + object_info() was redesigned to just return a single information including
    configuration options from configure_object(). (#596)
  + The functionality of shadow(ob, 0) was removed in favor of
    object_info(ob, OI_SHADOW_NEXT). There is a sefun implementation with
    the old signature in /mudlib/deprecated/. (#596)

- Pragmas
  + The behaviour of the pragma combine_strings is mandatory, that means
    string literals concatenated by '+' will always be combined at
    compile-time. This pragmas and no_combine_strings are ignored. (#702)
  + The behaviour of the pragma local_scopes is mandatory, that means
    that variables defined in a block always cease to exist after the end of
    the block. This pragma and no_local_scopes are ignored  (#702)
  + The behaviour of the pragma verbose_errors is mandatory, the compiler will
    always give information about the context of an error.
    This pragma is ignored  (#702)
  + The pragma warn_deprecated is now enabled by default. (#702)

- 'deprecated' modifier
  The deprecated modifier can be used for lfuns (and sefuns) and global
  variables. Upon creating and closure to them or using/calling them the
  compiler will issue a warning. The same occurs in symbol_function(),
  symbol_variable() and call_other/call_direct/call_resolved().

- LPC types
  + the 'float' type on 64 bit platforms (specifically LP64) has a higher
    precision and larger value ranges, because the driver uses the native
    'double' types of the host system to store them. On most host systems they
    conform to the IEEE 754 double precision floating point format.
    WARNING: If you want to save them losslessly with save_object/save_value(),
             you MUST use savefile format version 2 or higher!
